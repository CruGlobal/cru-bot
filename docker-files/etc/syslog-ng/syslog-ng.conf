@version: 3.5

options {
  chain_hostnames(off);
  flush_lines(0);
  use_dns(no);
  use_fqdn(no);
  owner("root");
  group("adm");
  perm(0640);
  stats_freq(0);
  frac_digits(3);
  keep-timestamp(no);
  time_reopen(5);
};

########################
# Sources
########################

source s_combined {
  unix-stream("/dev/log"
    max-connections(100)
  );
    unix-dgram("/var/nginx-access-logging.sock"
    max-connections(100)
    program-override("nginx-access")
    default-priority(info)
  );
  unix-dgram("/var/nginx-error-logging.sock"
    max-connections(100)
    program-override("nginx-error")
    default-priority(err)
  );
  internal();
};

########################
# Destinations
########################

# These 3 are only for local debugging.
# They provide a sanity check when our central logging system isn't showing the logs we expect.
destination d_debug { file("/var/log/debug-${YEAR}-${MONTH}-${DAY}.log"); };
destination d_error { file("/var/log/error-${YEAR}-${MONTH}-${DAY}.log"); };
destination d_messages { file("/var/log/messages-${YEAR}-${MONTH}-${DAY}.log"); };

# our syslog server
destination d_net {
  syslog("`SYSLOG_HOST`"
    transport("tcp")
    port(`SYSLOG_PORT`)
    log_fifo_size(1000)

# I would like to use these, but this version of syslog-ng was compiled without support for them.
# (The error message is "tcp-keepalive-time() is set but no TCP_KEEPIDLE setsockopt on this platform")
#    tcp-keepalive-time(30)
#    tcp-keepalive-intvl(30)
#    tcp-keepalive-probes(120)
  );
};

########################
# Filters
########################

filter f_debug { level(debug); };
filter f_info { level(info .. warn); };
filter f_error { level(err .. emerg); };


rewrite r_add_context {
  set("`ENVIRONMENT`" value(".SDATA.context@6484.environment"));
  set("`PROJECT_NAME`" value(".SDATA.context@6484.projectName"));
};

########################
# Log paths
########################
log { source(s_combined); filter(f_debug); destination(d_debug); };
log { source(s_combined); filter(f_info); destination(d_messages); };
log { source(s_combined); filter(f_error); destination(d_error); };

# Send all messages to our central logging server
log { source(s_combined); rewrite(r_add_context); destination(d_net); };
