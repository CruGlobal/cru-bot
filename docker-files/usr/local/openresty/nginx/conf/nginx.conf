# Ideally you want one worker process per core.
# ECS stage instances have 2 cores, prod instances have 8 cores.
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
user       node node;

events {
    worker_connections  1024;

    # epoll is more efficient than the default poll (http://nginx.org/en/docs/events.html)
    use epoll;

    # Accept as many connections as possible, after nginx gets notification about a new connection.
    # May flood worker_connections, if that option is set too low.
    multi_accept on;
}


http {
    # Without explicitly setting our own DNS server as the resolver, nginx can't resolve internal dns
    # entries on AWS.
    resolver      10.10.10.38;
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Sendfile copies data between one FD and other from within the kernel.
    # More efficient than read() + write(), since the requires transferring data to and from the user space.
    sendfile on;

    # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. This is useful for prepending headers before calling sendfile,
    # or for throughput optimization.
    tcp_nopush on;

    # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 30;

    # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
    reset_timedout_connection on;

    # send the client a "request timed out" if the body is not loaded by this time. Default 60.
    client_body_timeout 600;

    # If the client stops reading data, free up the stale client connection after this much time. Default 60.
    send_timeout 10;

    # Compression. Reduces the amount of data that needs to be transferred over the network
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/json;
    gzip_disable "MSIE [1-6]\.";

    # Enabling open_file_cache allows you to cache open file descriptors, frequently accessed files,
    # file information with their size and modification time, among other things. This can help you to
    # significantly improve your I/O. http://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache
    open_file_cache max=5000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    include /usr/local/openresty/nginx/conf.d/*.conf;
}
include /usr/local/openresty/nginx/env.conf;

daemon off;